<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.tuarua.arkit.lights"><apiName>com.tuarua.arkit.lights</apiName><apiDetail/><apiClassifier id="com.tuarua.arkit.lights:LightType"><apiName>LightType</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arkit.lights:LightType:IES"><apiName>IES</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ies</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:LightType:ambient"><apiName>ambient</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ambient</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:LightType:directional"><apiName>directional</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>directional</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:LightType:omni"><apiName>omni</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>omni</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:LightType:probe"><apiName>probe</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>probe</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:LightType:spot"><apiName>spot</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>spot</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit.lights:LightingModel"><apiName>LightingModel</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arkit.lights:LightingModel:blinn"><apiName>blinn</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>SCNLightingModelBlinn</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:LightingModel:constant"><apiName>constant</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>SCNLightingModelConstant</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:LightingModel:lambert"><apiName>lambert</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>SCNLightingModelLambert</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:LightingModel:phong"><apiName>phong</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>SCNLightingModelPhong</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:LightingModel:physicallyBased"><apiName>physicallyBased</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>SCNLightingModelPhysicallyBased</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit.lights:Light"><apiName>Light</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit.lights:Light:Light"><apiName>Light</apiName><shortdesc> Light represents a light that can be attached to a Node.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiData>unknown</apiData><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>    </apiDesc></apiParam></apiConstructorDef><apiDesc> Light represents a light that can be attached to a Node.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arkit.lights:Light:nodeName"><apiName>nodeName</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:attenuationEndDistance:get"><apiName>attenuationEndDistance</apiName><shortdesc> The distance at which the attenuation ends (Omni or Spot light types only).</shortdesc><prolog><asCustoms><Default>0 </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> The distance at which the attenuation ends (Omni or Spot light types only).
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:attenuationFalloffExponent:get"><apiName>attenuationFalloffExponent</apiName><shortdesc> Specifies the attenuation between the start and end attenuation distances.</shortdesc><prolog><asCustoms><Default>2 </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> Specifies the attenuation between the start and end attenuation distances. 0 means a constant
     attenuation, 1 a linear attenuation and 2 a quadratic attenuation, but any positive value will
     work (Omni or Spot light types only).
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:attenuationStartDistance:get"><apiName>attenuationStartDistance</apiName><shortdesc> The distance at which the attenuation starts (Omni or Spot light types only).</shortdesc><prolog><asCustoms><Default>0 </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> The distance at which the attenuation starts (Omni or Spot light types only).
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:automaticallyAdjustsShadowProjection:get"><apiName>automaticallyAdjustsShadowProjection</apiName><shortdesc> Specifies if the shadow map projection should be done automatically or manually by the user.</shortdesc><prolog><asCustoms><Default>true </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> Specifies if the shadow map projection should be done automatically or manually by the user.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:castsShadow:get"><apiName>castsShadow</apiName><shortdesc> Determines whether the receiver casts a shadow.</shortdesc><prolog><asCustoms><Default>false </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> Determines whether the receiver casts a shadow.
     
     <p>Shadows are only supported by spot and directional lights.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:categoryBitMask:get"><apiName>categoryBitMask</apiName><shortdesc> Determines the node categories that will be lit by the receiver.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>all bits </apiDefaultValue></apiValueDef><apiDesc> Determines the node categories that will be lit by the receiver.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:color:get"><apiName>color</apiName><shortdesc> Specifies the receiver's color.</shortdesc><prolog><asCustoms><Default>0xFFFFFFFF </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc> Specifies the receiver's color.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:forcesBackFaceCasters:get"><apiName>forcesBackFaceCasters</apiName><shortdesc> Render only back faces of the shadow caster when enabled.</shortdesc><prolog><asCustoms><Default>false </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> Render only back faces of the shadow caster when enabled.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:iesProfileURL:get"><apiName>iesProfileURL</apiName><shortdesc> Specifies the IES file from which the shape, direction, and intensity of illumination is determined.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null </apiDefaultValue></apiValueDef><apiDesc> Specifies the IES file from which the shape, direction, and intensity of illumination is determined.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:intensity:get"><apiName>intensity</apiName><shortdesc> Specifies the receiver's temperature.</shortdesc><prolog><asCustoms><Default>1000 </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> Specifies the receiver's temperature.
     
     <p>This intensity is used to modulate the light color. When used with a physically-based material,
     this corresponds to the luminous flux of the light, expressed in lumens (lm).</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:maximumShadowDistance:get"><apiName>maximumShadowDistance</apiName><shortdesc> Specifies the maximum distance from the viewpoint from which the shadows for the receiver light won't
     be computed.</shortdesc><prolog><asCustoms><Default>100.0 </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> Specifies the maximum distance from the viewpoint from which the shadows for the receiver light won't
     be computed.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:name:get"><apiName>name</apiName><shortdesc> The name of the light.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> The name of the light.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:orthographicScale:get"><apiName>orthographicScale</apiName><shortdesc> Specifies the orthographic scale used to render from the directional light into the shadow map.</shortdesc><prolog><asCustoms><Default>1 </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> Specifies the orthographic scale used to render from the directional light into the shadow map.
     
     <p>This is only applicable for directional lights.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:sampleDistributedShadowMaps:get"><apiName>sampleDistributedShadowMaps</apiName><shortdesc> Use the sample distribution of the main rendering to better fit the shadow frusta.</shortdesc><prolog><asCustoms><Default>false </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> Use the sample distribution of the main rendering to better fit the shadow frusta.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:shadowBias:get"><apiName>shadowBias</apiName><shortdesc> Specifies the correction to apply to the shadow map to correct acne artefacts.</shortdesc><prolog><asCustoms><Default>1.0 </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> Specifies the correction to apply to the shadow map to correct acne artefacts. It is multiplied by an
     implementation-specific value to create a constant depth offset.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:shadowCascadeCount:get"><apiName>shadowCascadeCount</apiName><shortdesc> Specifies the number of distinct shadow maps that will be computed for the receiver light.</shortdesc><prolog><asCustoms><Default>1 </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> Specifies the number of distinct shadow maps that will be computed for the receiver light.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:shadowCascadeSplittingFactor:get"><apiName>shadowCascadeSplittingFactor</apiName><shortdesc> Specifies a factor to interpolate between linear splitting (0) and logarithmic splitting (1)
     </shortdesc><prolog><asCustoms><Default>0.15 </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> Specifies a factor to interpolate between linear splitting (0) and logarithmic splitting (1)
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:shadowColor:get"><apiName>shadowColor</apiName><shortdesc> Specifies the color of the shadow casted by the receiver.</shortdesc><prolog><asCustoms><Default>0x80000000 </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc> Specifies the color of the shadow casted by the receiver.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:shadowMapSize:get"><apiName>shadowMapSize</apiName><shortdesc> Specifies the size of the shadow map.</shortdesc><prolog><asCustoms><Default>[0, 0] </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Vector$Number"/></apiValueDef><apiDesc> Specifies the size of the shadow map.
     
     <p>The larger the shadow map is the more precise the shadows are but the slower the computation is.
     If set to {0,0} the size of the shadow map is automatically chosen.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:shadowMode:get"><apiName>shadowMode</apiName><shortdesc> Specified the mode to use to cast shadows.</shortdesc><prolog><asCustoms><Default>ShadowMode.forward </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> Specified the mode to use to cast shadows.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:shadowRadius:get"><apiName>shadowRadius</apiName><shortdesc> Specifies the sample radius used to render the receiver’s shadow.</shortdesc><prolog><asCustoms><Default>3.0 </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> Specifies the sample radius used to render the receiver’s shadow.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:shadowSampleCount:get"><apiName>shadowSampleCount</apiName><shortdesc> Specifies the number of sample per fragment to compute the shadow map.</shortdesc><prolog><asCustoms><Default>0 </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> Specifies the number of sample per fragment to compute the shadow map.
     
     <p>when the shadowSampleCount is set to 0, a default sample count is chosen depending on the platform.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:spotInnerAngle:get"><apiName>spotInnerAngle</apiName><shortdesc> The angle in degrees between the spot direction and the lit element below which the lighting is
     at full strength.</shortdesc><prolog><asCustoms><Default>0 </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> The angle in degrees between the spot direction and the lit element below which the lighting is
     at full strength.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:spotOuterAngle:get"><apiName>spotOuterAngle</apiName><shortdesc> The angle in degrees between the spot direction and the lit element after which the lighting is
     at zero strength.</shortdesc><prolog><asCustoms><Default>45 degrees </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> The angle in degrees between the spot direction and the lit element after which the lighting is
     at zero strength.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:temperature:get"><apiName>temperature</apiName><shortdesc> Specifies the receiver's temperature.</shortdesc><prolog><asCustoms><Default>1000 </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> Specifies the receiver's temperature.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:type:get"><apiName>type</apiName><shortdesc> Specifies the receiver's type.</shortdesc><prolog><asCustoms><Default>LightType.omni </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Specifies the receiver's type.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:zFar:get"><apiName>zFar</apiName><shortdesc> Specifies the maximal distance between the light and a visible surface to cast shadow on.</shortdesc><prolog><asCustoms><Default>100.0 </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> Specifies the maximal distance between the light and a visible surface to cast shadow on. If a surface
     is further from the light than this maximal distance, then the surface won't be shadowed.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:Light:zNear:get"><apiName>zNear</apiName><shortdesc> Specifies the minimal distance between the light and the surface to cast shadow on.</shortdesc><prolog><asCustoms><Default>1 </Default></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> Specifies the minimal distance between the light and the surface to cast shadow on. If a surface is
     closer to the light than this minimal distance, then the surface won't be shadowed. The near value
     must be different than zero.
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit.lights:ShadowMode"><apiName>ShadowMode</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arkit.lights:ShadowMode:deferred"><apiName>deferred</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:ShadowMode:forward"><apiName>forward</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.lights:ShadowMode:modulated"><apiName>modulated</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage>