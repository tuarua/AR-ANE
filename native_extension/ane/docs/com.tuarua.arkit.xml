<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.tuarua.arkit"><apiName>com.tuarua.arkit</apiName><apiDetail/><apiClassifier id="com.tuarua.arkit:Configuration"><apiName>Configuration</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:Configuration:Configuration"><apiName>Configuration</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arkit:Configuration:frameSemantics:get"><apiName>frameSemantics</apiName><shortdesc> The set of active semantics on the frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Vector$uint"/></apiValueDef><apiDesc> The set of active semantics on the frame. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Configuration:isLightEstimationEnabled:get"><apiName>isLightEstimationEnabled</apiName><shortdesc> Enable or disable light estimation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true </apiDefaultValue></apiValueDef><apiDesc> Enable or disable light estimation.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Configuration:worldAlignment:get"><apiName>worldAlignment</apiName><shortdesc> Determines how the coordinate system should be aligned with the world.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>WorldAlignment.gravity </apiDefaultValue></apiValueDef><apiDesc> Determines how the coordinate system should be aligned with the world.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:NodeReference"><apiName>NodeReference</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:NodeReference:NodeReference"><apiName>NodeReference</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arkit:NodeReference:removeAllActions"><apiName>removeAllActions</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:NodeReference:runAction"><apiName>runAction</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>action</apiItemName><apiOperationClassifier>com.tuarua.arkit.animation:Action</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arkit:NodeReference:protected:_isAdded"><apiName>_isAdded</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:NodeReference:protected:_name"><apiName>_name</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:NodeReference:protected:_parentName"><apiName>_parentName</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:NodeReference:isAdded:get"><apiName>isAdded</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:NodeReference:name:get"><apiName>name</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:NodeReference:parentName:get"><apiName>parentName</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:BodyTrackingConfiguration"><apiName>BodyTrackingConfiguration</apiName><shortdesc>
 A configuration for running body tracking.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.arkit:Configuration</apiBaseClassifier></apiClassifierDef><apiDesc>
 A configuration for running body tracking.
 <p>Body tracking provides 6 degrees of freedom tracking of a detected body in the scene. By default,
 FrameSemanticBodyDetection will be enabled.</p>
 </apiDesc></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:BodyTrackingConfiguration:BodyTrackingConfiguration"><apiName>BodyTrackingConfiguration</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arkit:BodyTrackingConfiguration:automaticImageScaleEstimationEnabled:get"><apiName>automaticImageScaleEstimationEnabled</apiName><shortdesc>
     Enables the estimation of a scale factor which may be used to correct the physical size of an image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     Enables the estimation of a scale factor which may be used to correct the physical size of an image.
     <p> If set to true ARKit will attempt to use the computed camera positions in order to compute the scale by which the given physical size
     differs from the estimated one. The information about the estimated scale can be found as the property estimatedScaleFactor on the ImageAnchor. </p>
     <p> When set to true the transform of a returned ARImageAnchor will use the estimated scale factor to correct the translation. Default value is false.</p>
     iOS 13.0+
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:BodyTrackingConfiguration:automaticSkeletonScaleEstimationEnabled:get"><apiName>automaticSkeletonScaleEstimationEnabled</apiName><shortdesc>
     Enables the estimation of a scale factor which may be used to correct the physical size of a skeleton in 3D.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     Enables the estimation of a scale factor which may be used to correct the physical size of a skeleton in 3D.
     <p> If set to true ARKit will attempt to use the computed camera positions in order to compute the scale by which the given physical size
     differs from the default one. The information about the estimated scale can be found as the property estimatedScaleFactor on the BodyAnchor.</p>
     <p> When set to true the transform of a returned BodyAnchor will use the estimated scale factor to correct the translation. Default value is false.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:BodyTrackingConfiguration:detectionImages:get"><apiName>detectionImages</apiName><shortdesc> Images to detect in the scene.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.tuarua.arkit:ReferenceImageSet</apiValueClassifier></apiValueDef><apiDesc> Images to detect in the scene.
     
     <p>If set the session will attempt to detect the specified images.
     When an image is detected an ARImageAnchor will be added to the session. </p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:BodyTrackingConfiguration:environmentTexturing:get"><apiName>environmentTexturing</apiName><shortdesc>
     The mode of environment texturing to run.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
     The mode of environment texturing to run.
     <p>If set, texture information will be accumulated and updated. Adding an AREnvironmentProbeAnchor to the session
     will get the current environment texture available from that probe's perspective which can be used for lighting
     virtual objects in the scene. Defaults to EnvironmentTexturing.none.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:BodyTrackingConfiguration:initialWorldMap:get"><apiName>initialWorldMap</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.filesystem:File"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:BodyTrackingConfiguration:isAutoFocusEnabled:get"><apiName>isAutoFocusEnabled</apiName><shortdesc> Enable or disable continuous auto focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>to true.
     </apiDefaultValue></apiValueDef><apiDesc> Enable or disable continuous auto focus.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:BodyTrackingConfiguration:isSupported:get"><apiName>isSupported</apiName><shortdesc>
     A Boolean value indicating whether the current device supports this session configuration class.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     A Boolean value indicating whether the current device supports this session configuration class.
     
     <p>Different types of AR experiences (which you configure using concrete ARConfiguration subclasses)
     can have different hardware requirements.</p>
     
     <p>Before attempting to create an AR configuration, verify that the user’s device supports the
     configuration you plan to use by checking the isSupported property of the corresponding configuration class.
     If this property’s value is false, the current device does not support the requested configuration.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:BodyTrackingConfiguration:maximumNumberOfTrackedImages:get"><apiName>maximumNumberOfTrackedImages</apiName><shortdesc>
     Maximum number of images to track simultaneously.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
     Maximum number of images to track simultaneously.
     <p> Setting the maximum number of tracked images will limit the number of images that can be tracked in a given frame.
     If more than the maximum is visible, only the images already being tracked will continue to track until tracking is lost or another image is removed.
     Images will continue to be detected regardless of images tracked. Default value is zero.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:BodyTrackingConfiguration:planeDetection:get"><apiName>planeDetection</apiName><shortdesc> Type of planes to detect in the scene.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>to single item array of PlaneDetection.none.
     </apiDefaultValue></apiValueDef><apiDesc> Type of planes to detect in the scene.
     
     <p>If set, new planes will continue to be detected and updated over time. Detected planes will be
     added to the session as ARPlaneAnchor objects. In the event that two planes are merged, the newer
     plane will be removed. </p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:BodyTrackingConfiguration:wantsHDREnvironmentTextures:get"><apiName>wantsHDREnvironmentTextures</apiName><shortdesc> Determines whether environment textures will be provided with high dynamic range.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> Determines whether environment textures will be provided with high dynamic range. Enabled by default. iOS 13.0+ </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:Node"><apiName>Node</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.arkit:NodeReference</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:Node:Node"><apiName>Node</apiName><shortdesc> Node is the model class for node-tree objects.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>geometry</apiItemName><apiType value="any"/><apiData>null</apiData><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>    </apiDesc></apiParam></apiConstructorDef><apiDesc> Node is the model class for node-tree objects.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arkit:Node:addChildNode"><apiName>addChildNode</apiName><shortdesc> Add child node.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiOperationClassifier>com.tuarua.arkit:Node</apiOperationClassifier><apiDesc>    </apiDesc></apiParam></apiOperationDef><apiDesc> Add child node.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:Node:childNode"><apiName>childNode</apiName><shortdesc> Returns the first node found in the node tree with the specified name.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>com.tuarua.arkit:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>nodeName</apiItemName><apiType value="String"/><apiDesc>The name of the node you are searching for.
     </apiDesc></apiParam><apiParam><apiItemName>recursively</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Set to true if you want the search to look through the sub-nodes recursively.
     </apiDesc></apiParam></apiOperationDef><apiDesc> Returns the first node found in the node tree with the specified name.
     <p>The search uses a pre-order tree traversal.</p>
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:Node:removeChildNodes"><apiName>removeChildNodes</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:Node:removeFromParentNode"><apiName>removeFromParentNode</apiName><shortdesc> Removes the node from the childNodes array of the receiver’s parentNode.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Removes the node from the childNodes array of the receiver’s parentNode.</apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arkit:Node:alpha:get"><apiName>alpha</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Node:castsShadow:get"><apiName>castsShadow</apiName><shortdesc> Determines if the node is rendered in shadow maps.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true </apiDefaultValue></apiValueDef><apiDesc> Determines if the node is rendered in shadow maps.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Node:categoryBitMask:get"><apiName>categoryBitMask</apiName><shortdesc> Defines what logical 'categories' the receiver belongs to.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>1
     </apiDefaultValue></apiValueDef><apiDesc> Defines what logical 'categories' the receiver belongs to.
     <p> Categories can be used to:
     <ul>
     <li>1. exclude nodes from the influence of a given light</li>
     <li>2. include/exclude nodes from render passes </li>
     <li>3. specify which nodes to use when hit-testing</li></ul></p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Node:childNodes:get"><apiName>childNodes</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Vector$com.tuarua.arkit:Node"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Node:eulerAngles:get"><apiName>eulerAngles</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Vector3D"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Node:geometry:get"><apiName>geometry</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Node:light:get"><apiName>light</apiName><shortdesc> Determines the light attached to the receiver.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.tuarua.arkit.lights:Light</apiValueClassifier></apiValueDef><apiDesc> Determines the light attached to the receiver.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Node:physicsBody:get"><apiName>physicsBody</apiName><shortdesc> The description of the physics body of the receiver.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.tuarua.arkit.physics:PhysicsBody</apiValueClassifier><apiDefaultValue>null
     </apiDefaultValue></apiValueDef><apiDesc> The description of the physics body of the receiver.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Node:position:get"><apiName>position</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Vector3D"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Node:scale:get"><apiName>scale</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Vector3D"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Node:transform:get"><apiName>transform</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Matrix3D"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Node:visible:get"><apiName>visible</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:ReferenceImageSet"><apiName>ReferenceImageSet</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:ReferenceImageSet:ReferenceImageSet"><apiName>ReferenceImageSet</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>groupName</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arkit:ReferenceImageSet:groupName"><apiName>groupName</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:FocusSquare"><apiName>FocusSquare</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:FocusSquare:FocusSquare"><apiName>FocusSquare</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>primaryColor</apiItemName><apiType value="uint"/><apiData>0xFFFFCC00</apiData></apiParam><apiParam><apiItemName>fillColor</apiItemName><apiType value="uint"/><apiData>0xFFFFEC69</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arkit:FocusSquare:hide"><apiName>hide</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:FocusSquare:show"><apiName>show</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arkit:FocusSquare:enabled:get"><apiName>enabled</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:FocusSquare:fillColor:get"><apiName>fillColor</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:FocusSquare:position:get"><apiName>position</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Vector3D"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:FocusSquare:primaryColor:get"><apiName>primaryColor</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:FocusSquare:isInited:set"><apiName>isInited</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:ObjectScanningConfiguration"><apiName>ObjectScanningConfiguration</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.arkit:Configuration</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:ObjectScanningConfiguration:ObjectScanningConfiguration"><apiName>ObjectScanningConfiguration</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arkit:ObjectScanningConfiguration:isAutoFocusEnabled:get"><apiName>isAutoFocusEnabled</apiName><shortdesc> Enable or disable continuous auto focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>to true.
     </apiDefaultValue></apiValueDef><apiDesc> Enable or disable continuous auto focus.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:ObjectScanningConfiguration:isSupported:get"><apiName>isSupported</apiName><shortdesc>
     A Boolean value indicating whether the current device supports this session configuration class.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     A Boolean value indicating whether the current device supports this session configuration class.
     
     <p>Different types of AR experiences (which you configure using concrete ARConfiguration subclasses)
     can have different hardware requirements.</p>
     
     <p>Before attempting to create an AR configuration, verify that the user’s device supports the
     configuration you plan to use by checking the isSupported property of the corresponding configuration class.
     If this property’s value is false, the current device does not support the requested configuration.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:ObjectScanningConfiguration:planeDetection:get"><apiName>planeDetection</apiName><shortdesc> Type of planes to detect in the scene.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>to single item array of PlaneDetection.none.
     </apiDefaultValue></apiValueDef><apiDesc> Type of planes to detect in the scene.
     
     <p>If set, new planes will continue to be detected and updated over time. Detected planes will be
     added to the session as ARPlaneAnchor objects. In the event that two planes are merged, the newer
     plane will be removed. </p>
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:DebugOptions"><apiName>DebugOptions</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arkit:DebugOptions:renderAsWireframe"><apiName>renderAsWireframe</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>64</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:DebugOptions:showBoundingBoxes"><apiName>showBoundingBoxes</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:DebugOptions:showCameras"><apiName>showCameras</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1024</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:DebugOptions:showConstraints"><apiName>showConstraints</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>512</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:DebugOptions:showCreases"><apiName>showCreases</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>256</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:DebugOptions:showFeaturePoints"><apiName>showFeaturePoints</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1073741824</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:DebugOptions:showLightExtents"><apiName>showLightExtents</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:DebugOptions:showLightInfluences"><apiName>showLightInfluences</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:DebugOptions:showPhysicsFields"><apiName>showPhysicsFields</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>16</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:DebugOptions:showPhysicsShapes"><apiName>showPhysicsShapes</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:DebugOptions:showSkeletons"><apiName>showSkeletons</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>128</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:DebugOptions:showWireframe"><apiName>showWireframe</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>32</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:DebugOptions:showWorldOrigin"><apiName>showWorldOrigin</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>18446744071562067968</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:PlaneAnchorClassification"><apiName>PlaneAnchorClassification</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arkit:PlaneAnchorClassification:ceiling"><apiName>ceiling</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PlaneAnchorClassification:door"><apiName>door</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>7</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PlaneAnchorClassification:floor"><apiName>floor</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PlaneAnchorClassification:none"><apiName>none</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PlaneAnchorClassification:seat"><apiName>seat</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PlaneAnchorClassification:table"><apiName>table</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PlaneAnchorClassification:wall"><apiName>wall</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PlaneAnchorClassification:window"><apiName>window</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>6</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:PlaneAnchor"><apiName>PlaneAnchor</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.arkit:Anchor</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:PlaneAnchor:PlaneAnchor"><apiName>PlaneAnchor</apiName><shortdesc> Creates a new anchor object with the specified transform.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>sessionId</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>transform</apiItemName><apiType value="flash.geom:Matrix3D"/><apiData>null</apiData></apiParam></apiConstructorDef><apiDesc> Creates a new anchor object with the specified transform. </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arkit:PlaneAnchor:equals"><apiName>equals</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>planeAnchor</apiItemName><apiOperationClassifier>com.tuarua.arkit:PlaneAnchor</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arkit:PlaneAnchor:alignment"><apiName>alignment</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PlaneAnchor:center"><apiName>center</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Vector3D"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PlaneAnchor:classification"><apiName>classification</apiName><shortdesc> Classification of the plane.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="uint"/></apiValueDef><apiDesc> Classification of the plane. iOS 12.0+ </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PlaneAnchor:extent"><apiName>extent</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Vector3D"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PlaneAnchor:isClassificationSupported:get"><apiName>isClassificationSupported</apiName><shortdesc>
     Determines whether plane classification is supported on this device.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     Determines whether plane classification is supported on this device.
     Plane classification is available only on iPhone XS, iPhone XS Max, and iPhone XR.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:Skeleton3D"><apiName>Skeleton3D</apiName><shortdesc> The skeleton of a human body that ARKit tracks in 3D space.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> The skeleton of a human body that ARKit tracks in 3D space. </apiDesc></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:Skeleton3D:Skeleton3D"><apiName>Skeleton3D</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>jointLocalTransforms</apiItemName><apiType value="Vector$flash.geom:Matrix3D"/></apiParam><apiParam><apiItemName>jointModelTransforms</apiItemName><apiType value="Vector$flash.geom:Matrix3D"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arkit:Skeleton3D:jointLocalTransforms:get"><apiName>jointLocalTransforms</apiName><shortdesc> The local space joint data for each joint.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Vector$flash.geom:Matrix3D"/></apiValueDef><apiDesc> The local space joint data for each joint. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Skeleton3D:jointModelTransforms:get"><apiName>jointModelTransforms</apiName><shortdesc> The model space transforms for each joint.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Vector$flash.geom:Matrix3D"/></apiValueDef><apiDesc> The model space transforms for each joint. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:ImageAnchor"><apiName>ImageAnchor</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.arkit:Anchor</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:ImageAnchor:ImageAnchor"><apiName>ImageAnchor</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>sessionId</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>transform</apiItemName><apiType value="flash.geom:Matrix3D"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arkit:ImageAnchor:equals"><apiName>equals</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>imageAnchor</apiItemName><apiOperationClassifier>com.tuarua.arkit:ImageAnchor</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arkit:ImageAnchor:estimatedScaleFactor"><apiName>estimatedScaleFactor</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:ImageAnchor:height"><apiName>height</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:ImageAnchor:name"><apiName>name</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:ImageAnchor:width"><apiName>width</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:ReferenceObject"><apiName>ReferenceObject</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:ReferenceObject:ReferenceObject"><apiName>ReferenceObject</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arkit:ReferenceObject:center"><apiName>center</apiName><shortdesc>
     The center of the object in the object’s local coordinate space.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Vector3D"/></apiValueDef><apiDesc>
     The center of the object in the object’s local coordinate space.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:ReferenceObject:extent"><apiName>extent</apiName><shortdesc>
     The extent of the object in the object’s local coordinate space.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Vector3D"/></apiValueDef><apiDesc>
     The extent of the object in the object’s local coordinate space.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:ReferenceObject:name"><apiName>name</apiName><shortdesc>
     An optional name used to identify the object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     An optional name used to identify the object.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:ReferenceObject:scale"><apiName>scale</apiName><shortdesc>
     The scale of the object’s local coordinate space.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Vector3D"/></apiValueDef><apiDesc>
     The scale of the object’s local coordinate space.
     <p>Multiplying the extent by this scale will result in the physical extent of the object, measured in meters.</p>
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:PlaneDetection"><apiName>PlaneDetection</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arkit:PlaneDetection:horizontal"><apiName>horizontal</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PlaneDetection:none"><apiName>none</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PlaneDetection:vertical"><apiName>vertical</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:AntialiasingMode"><apiName>AntialiasingMode</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arkit:AntialiasingMode:multisampling2X"><apiName>multisampling2X</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:AntialiasingMode:multisampling4X"><apiName>multisampling4X</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:AntialiasingMode:none"><apiName>none</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:WorldAlignment"><apiName>WorldAlignment</apiName><shortdesc>
 Enum constants for indicating the world alignment.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Enum constants for indicating the world alignment.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.arkit:WorldAlignment:camera"><apiName>camera</apiName><shortdesc> Aligns the world with the camera’s orientation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef><apiDesc> Aligns the world with the camera’s orientation. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:WorldAlignment:gravityAndHeading"><apiName>gravityAndHeading</apiName><shortdesc> Aligns the world with gravity that is defined by the vector (0, -1, 0)
     and heading (w.r.t.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef><apiDesc> Aligns the world with gravity that is defined by the vector (0, -1, 0)
     and heading (w.r.t. True North) that is given by the vector (0, 0, -1). </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:WorldAlignment:gravity"><apiName>gravity</apiName><shortdesc> Aligns the world with gravity that is defined by vector (0, -1, 0).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef><apiDesc> Aligns the world with gravity that is defined by vector (0, -1, 0). </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:Camera"><apiName>Camera</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:Camera:Camera"><apiName>Camera</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arkit:Camera:averageGray:get"><apiName>averageGray</apiName><shortdesc> Determines the average gray level desired in the final image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0.18 </apiDefaultValue></apiValueDef><apiDesc> Determines the average gray level desired in the final image.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Camera:exposureOffset:get"><apiName>exposureOffset</apiName><shortdesc> Determines the logarithimc exposure biasing, in EV.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0. </apiDefaultValue></apiValueDef><apiDesc> Determines the logarithimc exposure biasing, in EV.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Camera:maximumExposure:get"><apiName>maximumExposure</apiName><shortdesc> Determines the maximum exposure offset of the adaptation, in EV.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>-15 </apiDefaultValue></apiValueDef><apiDesc> Determines the maximum exposure offset of the adaptation, in EV.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Camera:minimumExposure:get"><apiName>minimumExposure</apiName><shortdesc> Determines the minimum exposure offset of the adaptation, in EV.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>-15 </apiDefaultValue></apiValueDef><apiDesc> Determines the minimum exposure offset of the adaptation, in EV.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Camera:name:get"><apiName>name</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Camera:position:get"><apiName>position</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Vector3D"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Camera:wantsHDR:get"><apiName>wantsHDR</apiName><shortdesc> Determines if the receiver has a high dynamic range.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false. </apiDefaultValue></apiValueDef><apiDesc> Determines if the receiver has a high dynamic range.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Camera:whitePoint:get"><apiName>whitePoint</apiName><shortdesc> Determines the smallest luminance level that will be mapped to white in the final image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>1 </apiDefaultValue></apiValueDef><apiDesc> Determines the smallest luminance level that will be mapped to white in the final image.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:BodyAnchor"><apiName>BodyAnchor</apiName><shortdesc> An anchor representing a body in the world.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.arkit:Anchor</apiBaseClassifier></apiClassifierDef><apiDesc> An anchor representing a body in the world.</apiDesc></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:BodyAnchor:BodyAnchor"><apiName>BodyAnchor</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>sessionId</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>transform</apiItemName><apiType value="flash.geom:Matrix3D"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arkit:BodyAnchor:equals"><apiName>equals</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>bodyAnchor</apiItemName><apiOperationClassifier>com.tuarua.arkit:BodyAnchor</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arkit:BodyAnchor:estimatedScaleFactor"><apiName>estimatedScaleFactor</apiName><shortdesc>
     The factor between estimated physical size and default size of the skeleton.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/><apiDefaultValue>1.0
     </apiDefaultValue></apiValueDef><apiDesc>
     The factor between estimated physical size and default size of the skeleton.
     <p>This value will be estimated if automaticSkeletonScaleEstimationEnabled is set to true on the BodyTrackingConfiguration.
     It is used to correct the transform's translation. </p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:BodyAnchor:skeleton"><apiName>skeleton</apiName><shortdesc>
     The tracked skeleton in 3D.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.arkit:Skeleton3D</apiValueClassifier></apiValueDef><apiDesc>
     The tracked skeleton in 3D.
     The default height of this skeleton, measured from lowest to highest joint in standing position, is defined to be 1.71 meters.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:PlaneAnchorAlignment"><apiName>PlaneAnchorAlignment</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arkit:PlaneAnchorAlignment:horizontal"><apiName>horizontal</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PlaneAnchorAlignment:vertical"><apiName>vertical</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:FrameSemantics"><apiName>FrameSemantics</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arkit:FrameSemantics:bodyDetection"><apiName>bodyDetection</apiName><shortdesc> An option that indicates that 2D body detection is enabled.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="uint"/></apiValueDef><apiDesc> An option that indicates that 2D body detection is enabled.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:FrameSemantics:personSegmentationWithDepth"><apiName>personSegmentationWithDepth</apiName><shortdesc> An option that indicates that people occlude your app's virtual content depending on depth.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="uint"/></apiValueDef><apiDesc> An option that indicates that people occlude your app's virtual content depending on depth.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:FrameSemantics:personSegmentation"><apiName>personSegmentation</apiName><shortdesc> An option that indicates that people occlude your app's virtual content.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc> An option that indicates that people occlude your app's virtual content.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:FrameSemantics:sceneDepth"><apiName>sceneDepth</apiName><shortdesc> An option that exposes depth information that the framework perceives in the real-world environment.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="uint"/></apiValueDef><apiDesc> An option that exposes depth information that the framework perceives in the real-world environment.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:FrameSemantics:smoothedSceneDepth"><apiName>smoothedSceneDepth</apiName><shortdesc> An option that exposes depth information that the framework perceives in the real-world environment.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>16</apiData><apiType value="uint"/></apiValueDef><apiDesc> An option that exposes depth information that the framework perceives in the real-world environment.</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:WorldTrackingConfiguration"><apiName>WorldTrackingConfiguration</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.arkit:Configuration</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:WorldTrackingConfiguration:WorldTrackingConfiguration"><apiName>WorldTrackingConfiguration</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arkit:WorldTrackingConfiguration:supportsFrameSemantics"><apiName>supportsFrameSemantics</apiName><shortdesc> Checks whether a particular feature is supported.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>frameSemantics</apiItemName><apiType value="uint"/></apiParam></apiOperationDef><apiDesc> Checks whether a particular feature is supported.
     
     Call this function before attempting to enable a frame semantic on your app's configuration.
     For example, if you call supportsFrameSemantic(.sceneDepth) on WorldTrackingConfiguration,
     the function returns true on devices that support the LiDAR scanner's depth buffer.</apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arkit:WorldTrackingConfiguration:automaticImageScaleEstimationEnabled:get"><apiName>automaticImageScaleEstimationEnabled</apiName><shortdesc>
     Enables the estimation of a scale factor which may be used to correct the physical size of an image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     Enables the estimation of a scale factor which may be used to correct the physical size of an image.
     <p> If set to true ARKit will attempt to use the computed camera positions in order to compute the scale by which the given physical size
     differs from the estimated one. The information about the estimated scale can be found as the property estimatedScaleFactor on the ImageAnchor. </p>
     <p> When set to true the transform of a returned ARImageAnchor will use the estimated scale factor to correct the translation. Default value is false.</p>
     iOS 13.0+
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:WorldTrackingConfiguration:detectionImages:get"><apiName>detectionImages</apiName><shortdesc> Images to detect in the scene.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.tuarua.arkit:ReferenceImageSet</apiValueClassifier></apiValueDef><apiDesc> Images to detect in the scene.
     
     <p>If set the session will attempt to detect the specified images.
     When an image is detected an ARImageAnchor will be added to the session. </p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:WorldTrackingConfiguration:detectionObjects:get"><apiName>detectionObjects</apiName><shortdesc>
     Objects to detect in the scene.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.tuarua.arkit:ReferenceObjectSet</apiValueClassifier></apiValueDef><apiDesc>
     Objects to detect in the scene.
     <p>If set the session will attempt to detect the specified objects.
     When an object is detected an ARObjectAnchor will be added to the session.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:WorldTrackingConfiguration:environmentTexturing:get"><apiName>environmentTexturing</apiName><shortdesc>
     The mode of environment texturing to run.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
     The mode of environment texturing to run.
     <p>If set, texture information will be accumulated and updated. Adding an AREnvironmentProbeAnchor to the session
     will get the current environment texture available from that probe's perspective which can be used for lighting
     virtual objects in the scene. Defaults to EnvironmentTexturing.none.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:WorldTrackingConfiguration:initialWorldMap:get"><apiName>initialWorldMap</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.filesystem:File"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:WorldTrackingConfiguration:isAutoFocusEnabled:get"><apiName>isAutoFocusEnabled</apiName><shortdesc> Enable or disable continuous auto focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>to true.
     </apiDefaultValue></apiValueDef><apiDesc> Enable or disable continuous auto focus. iOS 11.3+.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:WorldTrackingConfiguration:isCollaborationEnabled:get"><apiName>isCollaborationEnabled</apiName><shortdesc>
     Enable/disable a collaborative session.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     Enable/disable a collaborative session. Disabled by default.
     <p> When enabled, ARSession will output collaboration data for other participants using its delegate didOutputCollaborationData.
     It is the responsibility of the caller to send the data to each participant. When data is received by a participant, it
     should be passed to the ARSession by calling updateWithCollaborationData.</p>
     iOS 13.0+
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:WorldTrackingConfiguration:maximumNumberOfTrackedImages:get"><apiName>maximumNumberOfTrackedImages</apiName><shortdesc>
     Maximum number of images to track simultaneously.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
     Maximum number of images to track simultaneously.
     <p> Setting the maximum number of tracked images will limit the number of images that can be tracked in a given frame.
     If more than the maximum is visible, only the images already being tracked will continue to track until tracking is lost or another image is removed.
     Images will continue to be detected regardless of images tracked. Default value is zero.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:WorldTrackingConfiguration:planeDetection:get"><apiName>planeDetection</apiName><shortdesc> Type of planes to detect in the scene.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>to single item array of PlaneDetection.none.
     </apiDefaultValue></apiValueDef><apiDesc> Type of planes to detect in the scene.
     
     <p>If set, new planes will continue to be detected and updated over time. Detected planes will be
     added to the session as ARPlaneAnchor objects. In the event that two planes are merged, the newer
     plane will be removed. </p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:WorldTrackingConfiguration:supportsUserFaceTracking:get"><apiName>supportsUserFaceTracking</apiName><shortdesc> Indicates whether user face tracking using the front facing camera can be enabled on this device.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Indicates whether user face tracking using the front facing camera can be enabled on this device. iOS 13.0+ </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:WorldTrackingConfiguration:userFaceTrackingEnabled:get"><apiName>userFaceTrackingEnabled</apiName><shortdesc> Enable or disable running Face Tracking using the front facing camera.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> Enable or disable running Face Tracking using the front facing camera. Disabled by default.
     When enabled, Session detects faces (if visible in the front-facing camera image) and adds to its list of anchors,
     an FaceAnchor object representing each face.
     The transform of the FaceAnchor objects will be in the world coordinate space.
     see FaceAnchor
     iOS 13.0+
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:WorldTrackingConfiguration:wantsHDREnvironmentTextures:get"><apiName>wantsHDREnvironmentTextures</apiName><shortdesc> Determines whether environment textures will be provided with high dynamic range.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> Determines whether environment textures will be provided with high dynamic range. Enabled by default. iOS 13.0+ </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:ObjectAnchor"><apiName>ObjectAnchor</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.arkit:Anchor</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:ObjectAnchor:ObjectAnchor"><apiName>ObjectAnchor</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>sessionId</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>transform</apiItemName><apiType value="flash.geom:Matrix3D"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arkit:ObjectAnchor:equals"><apiName>equals</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>objectAnchor</apiItemName><apiOperationClassifier>com.tuarua.arkit:ObjectAnchor</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arkit:ObjectAnchor:referenceObject"><apiName>referenceObject</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiValueClassifier>com.tuarua.arkit:ReferenceObject</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:AR2DView"><apiName>AR2DView</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:AR2DView:AR2DView"><apiName>AR2DView</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.arkit:Scene"><apiName>Scene</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arkit:Scene:lightingEnvironment:get"><apiName>lightingEnvironment</apiName><shortdesc> lighting environment </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.arkit.materials:MaterialProperty</apiValueClassifier></apiValueDef><apiDesc> lighting environment </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Scene:physicsWorld:get"><apiName>physicsWorld</apiName><shortdesc> physics world </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.arkit.physics:PhysicsWorld</apiValueClassifier></apiValueDef><apiDesc> physics world </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Scene:rootNode:get"><apiName>rootNode</apiName><shortdesc> root node </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.arkit:Node</apiValueClassifier></apiValueDef><apiDesc> root node </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:PlaneAnchorClassificationStatus"><apiName>PlaneAnchorClassificationStatus</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arkit:PlaneAnchorClassificationStatus:notAvailable"><apiName>notAvailable</apiName><shortdesc> Plane classification is currently unavailable.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="uint"/></apiValueDef><apiDesc> Plane classification is currently unavailable. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PlaneAnchorClassificationStatus:undetermined"><apiName>undetermined</apiName><shortdesc> ARKit has not yet determined the classification of this plane.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc> ARKit has not yet determined the classification of this plane. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PlaneAnchorClassificationStatus:unknown"><apiName>unknown</apiName><shortdesc> ARKit is confident the plane is not any of the known classes.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef><apiDesc> ARKit is confident the plane is not any of the known classes. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:Anchor"><apiName>Anchor</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:Anchor:Anchor"><apiName>Anchor</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>sessionId</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>transform</apiItemName><apiType value="flash.geom:Matrix3D"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arkit:Anchor:id:get"><apiName>id</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Anchor:sessionId:get"><apiName>sessionId</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:Anchor:transform:get"><apiName>transform</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Matrix3D"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:ReferenceObjectSet"><apiName>ReferenceObjectSet</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:ReferenceObjectSet:ReferenceObjectSet"><apiName>ReferenceObjectSet</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>groupName</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arkit:ReferenceObjectSet:groupName"><apiName>groupName</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:PositionalTrackingConfiguration"><apiName>PositionalTrackingConfiguration</apiName><shortdesc>
 A configuration for running positional tracking.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.arkit:Configuration</apiBaseClassifier></apiClassifierDef><apiDesc>
 A configuration for running positional tracking.
 <p>Positional tracking provides 6 degrees of freedom tracking of the device by running the camera at lowest
 possible resolution and frame rate.</p>
 iOS 13.0+.
 </apiDesc></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:PositionalTrackingConfiguration:PositionalTrackingConfiguration"><apiName>PositionalTrackingConfiguration</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arkit:PositionalTrackingConfiguration:initialWorldMap:get"><apiName>initialWorldMap</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.filesystem:File"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PositionalTrackingConfiguration:isSupported:get"><apiName>isSupported</apiName><shortdesc>
     A Boolean value indicating whether the current device supports this session configuration class.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     A Boolean value indicating whether the current device supports this session configuration class.
     
     <p>Different types of AR experiences (which you configure using concrete ARConfiguration subclasses)
     can have different hardware requirements.</p>
     
     <p>Before attempting to create an AR configuration, verify that the user’s device supports the
     configuration you plan to use by checking the isSupported property of the corresponding configuration class.
     If this property’s value is false, the current device does not support the requested configuration.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:PositionalTrackingConfiguration:planeDetection:get"><apiName>planeDetection</apiName><shortdesc> Type of planes to detect in the scene.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>to single item array of PlaneDetection.none.
     </apiDefaultValue></apiValueDef><apiDesc> Type of planes to detect in the scene.
     
     <p>If set, new planes will continue to be detected and updated over time. Detected planes will be
     added to the session as ARPlaneAnchor objects. In the event that two planes are merged, the newer
     plane will be removed. </p>
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:ImageTrackingConfiguration"><apiName>ImageTrackingConfiguration</apiName><shortdesc>
 A configuration for running image tracking.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.arkit:Configuration</apiBaseClassifier></apiClassifierDef><apiDesc>
 A configuration for running image tracking.
 <p>Image tracking provides 6 degrees of freedom tracking of known images. Four images may be tracked simultaneously.
 iOS 12.0+.</p>
 </apiDesc></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:ImageTrackingConfiguration:ImageTrackingConfiguration"><apiName>ImageTrackingConfiguration</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arkit:ImageTrackingConfiguration:isAutoFocusEnabled:get"><apiName>isAutoFocusEnabled</apiName><shortdesc> Enable or disable continuous auto focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>to true.
     </apiDefaultValue></apiValueDef><apiDesc> Enable or disable continuous auto focus.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:ImageTrackingConfiguration:isSupported:get"><apiName>isSupported</apiName><shortdesc>
     A Boolean value indicating whether the current device supports this session configuration class.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     A Boolean value indicating whether the current device supports this session configuration class.
     
     <p>Different types of AR experiences (which you configure using concrete ARConfiguration subclasses)
     can have different hardware requirements.</p>
     
     <p>Before attempting to create an AR configuration, verify that the user’s device supports the
     configuration you plan to use by checking the isSupported property of the corresponding configuration class.
     If this property’s value is false, the current device does not support the requested configuration.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:ImageTrackingConfiguration:maximumNumberOfTrackedImages:get"><apiName>maximumNumberOfTrackedImages</apiName><shortdesc>
     Maximum number of images to track simultaneously.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
     Maximum number of images to track simultaneously.
     <p>Setting the maximum number of tracked images will limit the number of images that can be tracked in a given frame.
     If more than the maximum is visible, only the images already being tracked will continue to track until tracking is lost or another image is removed.
     Default value is one.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:ImageTrackingConfiguration:trackingImages:get"><apiName>trackingImages</apiName><shortdesc>
     Images to track in the scene.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.tuarua.arkit:ReferenceImageSet</apiValueClassifier></apiValueDef><apiDesc>
     Images to track in the scene.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:EnvironmentTexturing"><apiName>EnvironmentTexturing</apiName><shortdesc>
 Enum constants for indicating the mode of environment texturing to run.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Enum constants for indicating the mode of environment texturing to run.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.arkit:EnvironmentTexturing:automatic"><apiName>automatic</apiName><shortdesc> Texture information is gathered for the environment and probes automatically placed in the scene.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef><apiDesc> Texture information is gathered for the environment and probes automatically placed in the scene. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:EnvironmentTexturing:manual"><apiName>manual</apiName><shortdesc> Texture information is gathered for the environment.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef><apiDesc> Texture information is gathered for the environment.
     Environment textures will be generated for AREnvironmentProbes added to the session. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:EnvironmentTexturing:none"><apiName>none</apiName><shortdesc> No texture information is gathered.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef><apiDesc> No texture information is gathered. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:RenderingAPI"><apiName>RenderingAPI</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arkit:RenderingAPI:auto"><apiName>auto</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:RenderingAPI:metal"><apiName>metal</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:RenderingAPI:openGLES2"><apiName>openGLES2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:RunOptions"><apiName>RunOptions</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arkit:RunOptions:removeExistingAnchors"><apiName>removeExistingAnchors</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:RunOptions:resetTracking"><apiName>resetTracking</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:AR3DView"><apiName>AR3DView</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:AR3DView:AR3DView"><apiName>AR3DView</apiName><shortdesc> private </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> private </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arkit:AR3DView:dispose"><apiName>dispose</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:AR3DView:hitTest3D"><apiName>hitTest3D</apiName><shortdesc> Searches the current frame for objects corresponding to a point in the view.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc></apiDesc><apiOperationClassifier>com.tuarua.arkit.touch:ARHitTestResult</apiOperationClassifier></apiReturn><apiParam><apiItemName>touchPoint</apiItemName><apiType value="flash.geom:Point"/><apiDesc>A point in the view’s coordinate system.
     </apiDesc></apiParam><apiParam><apiItemName>types</apiItemName><apiType value="Array"/><apiDesc>The types of results to search for.
     </apiDesc></apiParam></apiOperationDef><apiDesc> Searches the current frame for objects corresponding to a point in the view.
     <p>A 2D point in the view’s coordinate space can refer to any point along a line segment in
     the 3D coordinate space. Hit-testing is the process of finding objects in the world located
     along this line segment.</p>
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:AR3DView:hitTest"><apiName>hitTest</apiName><shortdesc> Searches the current frame for objects corresponding to a point in the view.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc></apiDesc><apiOperationClassifier>com.tuarua.arkit.touch:HitTestResult</apiOperationClassifier></apiReturn><apiParam><apiItemName>touchPoint</apiItemName><apiType value="flash.geom:Point"/><apiDesc>A point in the view’s coordinate system.
     </apiDesc></apiParam><apiParam><apiItemName>options</apiItemName><apiOperationClassifier>com.tuarua.arkit.touch:HitTestOptions</apiOperationClassifier><apiData>null</apiData><apiDesc>    </apiDesc></apiParam></apiOperationDef><apiDesc> Searches the current frame for objects corresponding to a point in the view.
     <p>A 2D point in the view’s coordinate space can refer to any point along a line segment in
     the 3D coordinate space. Hit-testing is the process of finding objects in the world located
     along this line segment.</p>
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:AR3DView:init"><apiName>init</apiName><shortdesc> Initialise the ARSCN view.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc></apiDesc><apiType value="void"/></apiReturn><apiParam><apiItemName>frame</apiItemName><apiType value="flash.geom:Rectangle"/><apiData>null</apiData><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>mask</apiItemName><apiType value="flash.display:BitmapData"/><apiData>null</apiData><apiDesc>An Optional bitmapdata which masks the airView. This allows us to use our AIR stage as UI over
     the ARKit view
     </apiDesc></apiParam></apiOperationDef><apiDesc> Initialise the ARSCN view.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:AR3DView:isNodeInsidePointOfView"><apiName>isNodeInsidePointOfView</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiOperationClassifier>com.tuarua.arkit:Node</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:AR3DView:node"><apiName>node</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>com.tuarua.arkit:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>anchor</apiItemName><apiOperationClassifier>com.tuarua.arkit:Anchor</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:AR3DView:raycastQuery"><apiName>raycastQuery</apiName><shortdesc>
     Creates a raycast query originating from the point on view, aligned along the center of the field of view of
     the camera.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>com.tuarua.arkit.raycast:RaycastQuery</apiOperationClassifier></apiReturn><apiParam><apiItemName>point</apiItemName><apiType value="flash.geom:Point"/><apiDesc>A point in the view’s coordinate system.
     </apiDesc></apiParam><apiParam><apiItemName>target</apiItemName><apiType value="int"/><apiDesc>Type of target where the ray should terminate.
     </apiDesc></apiParam><apiParam><apiItemName>alignment</apiItemName><apiType value="int"/><apiDesc>Alignment of the target.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Creates a raycast query originating from the point on view, aligned along the center of the field of view of
     the camera.
     <p>A 2D point in the view's coordinate space and the frame camera's field of view is used to create a ray in
     the 3D cooridnate space originating at the point.</p>
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arkit:AR3DView:antialiasingMode:get"><apiName>antialiasingMode</apiName><shortdesc> </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/><apiDefaultValue>AntialiasingMode.none </apiDefaultValue></apiValueDef><apiDesc> </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:AR3DView:autoenablesDefaultLighting:get"><apiName>autoenablesDefaultLighting</apiName><shortdesc> Specifies whether the receiver should automatically light up scenes that have no light source.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false</apiDefaultValue></apiValueDef><apiDesc> Specifies whether the receiver should automatically light up scenes that have no light source.
     
     <p>When enabled, a diffuse light is automatically added and placed while rendering scenes that
     have no light or only ambient lights.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:AR3DView:automaticallyUpdatesLighting:get"><apiName>automaticallyUpdatesLighting</apiName><shortdesc> Determines whether the view will update the scene’s lighting.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true </apiDefaultValue></apiValueDef><apiDesc> Determines whether the view will update the scene’s lighting.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:AR3DView:camera:get"><apiName>camera</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.arkit:Camera</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:AR3DView:debugOptions:get"><apiName>debugOptions</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:AR3DView:focusSquare:get"><apiName>focusSquare</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.tuarua.arkit:FocusSquare</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:AR3DView:rendersMotionBlur:get"><apiName>rendersMotionBlur</apiName><shortdesc>
     Determines whether view renders motion blur.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     Determines whether view renders motion blur.
     <p> When set, the view will automatically add motion blur to rendered
     content that matches the motion blur of the camera stream.</p>
     Overwrites Camera's motionBlurIntensity property. Disabled by default.
     iOS 13.0+
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:AR3DView:scene:get"><apiName>scene</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.arkit:Scene</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:AR3DView:session:get"><apiName>session</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.arkit:Session</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit:AR3DView:showsStatistics:get"><apiName>showsStatistics</apiName><shortdesc> Determines whether the receiver should display statistics info like FPS.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false </apiDefaultValue></apiValueDef><apiDesc> Determines whether the receiver should display statistics info like FPS.
     <p>When set to true, statistics are displayed in a overlay on top of the rendered scene.</p>
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit:Session"><apiName>Session</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit:Session:Session"><apiName>Session</apiName><shortdesc> private </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> private </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arkit:Session:add"><apiName>add</apiName><shortdesc> Adds an anchor to the session.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>anchor</apiItemName><apiOperationClassifier>com.tuarua.arkit:Anchor</apiOperationClassifier></apiParam></apiOperationDef><apiDesc> Adds an anchor to the session. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:Session:com.tuarua.arkit:createReferenceObject"><apiName>createReferenceObject</apiName><shortdesc>
     Creates a new reference object from scanned features within the provided bounds.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>transform</apiItemName><apiType value="flash.geom:Matrix3D"/><apiDesc>The transformation matrix that defines the rotation and translation of the bounds in
     world coordinates. This will be used as the reference object's transform, defining its coordinate space.
     </apiDesc></apiParam><apiParam><apiItemName>center</apiItemName><apiType value="flash.geom:Vector3D"/><apiDesc>The center of the object's bounds in the transform's coordinate space. A zero vector will
     define the object's origin centered within its extent.
     </apiDesc></apiParam><apiParam><apiItemName>extent</apiItemName><apiType value="flash.geom:Vector3D"/><apiDesc>The extent of the object's bounds in the transform's coordinate space. This defines the bounds'
     size in each dimension.
     </apiDesc></apiParam><apiParam><apiItemName>completionHandler</apiItemName><apiType value="Function"/><apiDesc>The completion handler to call when the creation has completed. This handler is executed
     on the session's delegate queue. The completion handler takes the following parameters:
     referenceObject - The reference object created or null if unavailable.
     error - An error that indicates why creation failed, or null if a reference object was provided.
     iOS 12.0+
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Creates a new reference object from scanned features within the provided bounds.
     <p>Reference objects can be stored and used to track 3D objects from previously scanned data.
     Creation requires that an ObjectScanningConfiguration is used so that sufficient features are scanned.</p>
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:Session:geoLocation"><apiName>geoLocation</apiName><shortdesc>
     Converts a position in the framework’s local coordinate system to latitude, longitude and altitude.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>position</apiItemName><apiType value="flash.geom:Vector3D"/><apiDesc>Position in local coordinates to convert.
     </apiDesc></apiParam><apiParam><apiItemName>completionHandler</apiItemName><apiType value="Function"/><apiDesc>Code that control will execute when this function returns.
     The session runs this code on its delegate queue.
     The parameters are:
     
     coordinate
     Location coordinates (latitude, longitude).
     
     altitude
     The altitude.
     
     error
     The reason, if conversion fails.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Converts a position in the framework’s local coordinate system to latitude, longitude and altitude.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:Session:pause"><apiName>pause</apiName><shortdesc> Pauses the session.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Pauses the session.
     
     <p>Once paused, no more updates will be received from the
     session until run is called again.</p>
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:Session:raycast"><apiName>raycast</apiName><shortdesc>
     Perform a raycast.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>List of raycast results, sorted from nearest to farthest (in distance from the camera).
     The results could be empty if raycast fails.
     iOS 13.0+
     </apiDesc><apiType value="Vector$com.tuarua.arkit.raycast:RaycastResult"/></apiReturn><apiParam><apiItemName>query</apiItemName><apiOperationClassifier>com.tuarua.arkit.raycast:RaycastQuery</apiOperationClassifier><apiDesc>Raycast query used for raycasting.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Perform a raycast.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:Session:remove"><apiName>remove</apiName><shortdesc> Removes an anchor to the session.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>anchorId</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Removes an anchor to the session. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:Session:run"><apiName>run</apiName><shortdesc> Runs the session with the provided configuration and options.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>configuration</apiItemName><apiOperationClassifier>com.tuarua.arkit:Configuration</apiOperationClassifier><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>options</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>    </apiDesc></apiParam></apiOperationDef><apiDesc> Runs the session with the provided configuration and options.
     
     <p>Calling run on a session that has already started will
     transition immediately to using the new configuration. Options
     can be used to alter the default behavior when transitioning configurations.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:Session:saveCurrentWorldMap"><apiName>saveCurrentWorldMap</apiName><shortdesc>
     Copies the current state of the world being tracked by the session.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>file</apiItemName><apiType value="flash.filesystem:File"/><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>completionHandler</apiItemName><apiType value="Function"/><apiDesc>The completion handler to call when the get has completed. This handler is executed
     on the session's delegate queue. The completion handler takes the following parameters:
     worldMap - The current world map or nil if unavailable.
     error - An error that indicates why the world map is unavailable, or null if a world map was provided.
     iOS 12.0+
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Copies the current state of the world being tracked by the session.
     <p> A world map is only provided when running an ARWorldTrackingConfiguration.</p>
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:Session:setWorldOriginSession"><apiName>setWorldOriginSession</apiName><shortdesc> Sets the world origin of the session to be at the position and orientation
     specified by the provided transform.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>relativeTransform</apiItemName><apiType value="flash.geom:Matrix3D"/><apiDesc>The rotation, translation and scale from the current world origin
     to the desired world origin.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc> Sets the world origin of the session to be at the position and orientation
     specified by the provided transform. iOS 11.3+
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arkit:Session:trackedRaycast"><apiName>trackedRaycast</apiName><shortdesc>
     Perform a tracked raycast.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Tracked raycast object used to update or stop raycasting. This could be null if the raycast fails or if the
     configuration is not WorldTrackingConfiguration or its subclasses.
     iOS 13.0+
     </apiDesc><apiOperationClassifier>com.tuarua.arkit.raycast:TrackedRaycast</apiOperationClassifier></apiReturn><apiParam><apiItemName>query</apiItemName><apiOperationClassifier>com.tuarua.arkit.raycast:RaycastQuery</apiOperationClassifier><apiDesc>Raycast query used for raycasting.
     </apiDesc></apiParam><apiParam><apiItemName>updateHandler</apiItemName><apiType value="Function"/><apiDesc>update handler where updated list of results, sorted from nearest to farthest (in distance from
     the camera) are delivered. updateHandler will be called on session's delegate queue.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Perform a tracked raycast.
     <p>The session performs continuous raycasting and calls the update handler with the updated results.
     The TrackedRaycast object returned can be used to update the raycast with a new raycast query or stop raycasting.</p>
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arkit:Session:identifier:get"><apiName>identifier</apiName><shortdesc> Unique identifier of the running session.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Unique identifier of the running session.
     <p>The identifier may change after calling runWithConfiguration.</p>
     iOS 13.0+
     </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>