<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.tuarua.arkit.raycast"><apiName>com.tuarua.arkit.raycast</apiName><apiDetail/><apiClassifier id="com.tuarua.arkit.raycast:RaycastQueryTarget"><apiName>RaycastQueryTarget</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arkit.raycast:RaycastQueryTarget:estimatedPlane"><apiName>estimatedPlane</apiName><shortdesc>
     Ray's target is a plane that is estimated using the feature points around the ray.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef><apiDesc>
     Ray's target is a plane that is estimated using the feature points around the ray.
     When alignment is ARRaycastTargetAlignmentAny, alignment of estimated planes is based on the normal of the real world
     surface corresponding to the estimated plane.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.raycast:RaycastQueryTarget:existingPlaneGeometry"><apiName>existingPlaneGeometry</apiName><shortdesc> Ray's target is an already detected plane, considering the plane's estimated size and shape.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef><apiDesc> Ray's target is an already detected plane, considering the plane's estimated size and shape. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.raycast:RaycastQueryTarget:existingPlaneInfinite"><apiName>existingPlaneInfinite</apiName><shortdesc> Ray's target is an already detected plane, without considering the plane's size.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef><apiDesc> Ray's target is an already detected plane, without considering the plane's size. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit.raycast:RaycastQueryTargetAlignment"><apiName>RaycastQueryTargetAlignment</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arkit.raycast:RaycastQueryTargetAlignment:any"><apiName>any</apiName><shortdesc> A target that is in any alignment, inclusive of horizontal and vertical.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef><apiDesc> A target that is in any alignment, inclusive of horizontal and vertical. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.raycast:RaycastQueryTargetAlignment:horizontal"><apiName>horizontal</apiName><shortdesc> A target that is horizontal with respect to gravity.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef><apiDesc> A target that is horizontal with respect to gravity. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.raycast:RaycastQueryTargetAlignment:vertical"><apiName>vertical</apiName><shortdesc> A target that is vertical with respect to gravity.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef><apiDesc> A target that is vertical with respect to gravity. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit.raycast:RaycastQuery"><apiName>RaycastQuery</apiName><shortdesc>
 Representation of a ray and its target which is used for raycasting.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Representation of a ray and its target which is used for raycasting.
 <p>Represents a 3D ray and its target which is used to perform raycasting.</p>
 </apiDesc></apiClassifierDetail><apiConstructor id="com.tuarua.arkit.raycast:RaycastQuery:RaycastQuery"><apiName>RaycastQuery</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arkit.raycast:RaycastQuery:direction"><apiName>direction</apiName><shortdesc> Direction of the ray.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Vector3D"/></apiValueDef><apiDesc> Direction of the ray.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.raycast:RaycastQuery:origin"><apiName>origin</apiName><shortdesc> Origin of the ray.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Vector3D"/></apiValueDef><apiDesc> Origin of the ray. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.raycast:RaycastQuery:targetAlignment"><apiName>targetAlignment</apiName><shortdesc> The alignment of the target that should be considered for raycasting.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc> The alignment of the target that should be considered for raycasting.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.raycast:RaycastQuery:target"><apiName>target</apiName><shortdesc> Type of target where the ray should terminate.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc> Type of target where the ray should terminate.</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit.raycast:RaycastResult"><apiName>RaycastResult</apiName><shortdesc> Result of a raycast on a single target.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> Result of a raycast on a single target. </apiDesc></apiClassifierDetail><apiConstructor id="com.tuarua.arkit.raycast:RaycastResult:RaycastResult"><apiName>RaycastResult</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arkit.raycast:RaycastResult:anchor"><apiName>anchor</apiName><shortdesc> The anchor that the ray intersected.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.arkit:Anchor</apiValueClassifier></apiValueDef><apiDesc> The anchor that the ray intersected.
     <p>In case of an existing plane target, an anchor will always be provided. In case of an estimated plane target,
     an anchor may be provided if the ray hit an existing plane.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.raycast:RaycastResult:targetAlignment"><apiName>targetAlignment</apiName><shortdesc> Alignment of the target.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc> Alignment of the target.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.raycast:RaycastResult:target"><apiName>target</apiName><shortdesc> Type of the target where the ray terminated.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc> Type of the target where the ray terminated.</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arkit.raycast:RaycastResult:worldTransform"><apiName>worldTransform</apiName><shortdesc> The transformation matrix that defines the raycast result's rotation, translation and scale relative to the world.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Matrix3D"/></apiValueDef><apiDesc> The transformation matrix that defines the raycast result's rotation, translation and scale relative to the world.</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arkit.raycast:TrackedRaycast"><apiName>TrackedRaycast</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arkit.raycast:TrackedRaycast:TrackedRaycast"><apiName>TrackedRaycast</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arkit.raycast:TrackedRaycast:stopTracking"><apiName>stopTracking</apiName><shortdesc>
     Stop raycasting.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Stop raycasting.
     <p>&gt; The raycast will be continuously tracked until stopped.
     Resetting session's tracking, changing its configuration or deallocation of ARTrackedRaycast object cause
     the raycast to stop.</p>
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arkit.raycast:TrackedRaycast:id:get"><apiName>id</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage>